# ConfigMap
apiVersion: v1
kind: ConfigMap
metadata:
  name: bidw-portal-frontend2-config
  namespace: ${namespace}
data:
  runtime-env.js: |
    window.__runtime_config__ = {
      AUTH_URL: '${react_app_auth_url}',
      REPORT_URL: '${react_app_report_url}',
      SUBSCRIPTION_URL: '${react_app_subscription_url}'
    }

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bidw-portal-frontend2
  namespace: ${namespace}
spec:
  replicas: ${replicas}
  selector:
    matchLabels:
      app: bidw-portal-frontend2
  template:
    metadata:
      labels:
        app: bidw-portal-frontend2
    spec:
      containers:
      - name: bidw-portal-frontend2
        image: ${image_path}
        imagePullPolicy: Always
        ports:
        - containerPort: ${export_port}
          name: http
        resources:
          requests:
            cpu: ${resources_requests_cpu}
            memory: ${resources_requests_memory}
          limits:
            cpu: ${resources_limits_cpu}
            memory: ${resources_limits_memory}
        volumeMounts:
        - name: runtime-env
          mountPath: /usr/share/nginx/html/runtime-env.js
          subPath: runtime-env.js
        readinessProbe:
          httpGet:
            path: /
            port: ${export_port}
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          httpGet:
            path: /
            port: ${export_port}
          initialDelaySeconds: 30
          periodSeconds: 15
      volumes:
      - name: runtime-env
        configMap:
          name: bidw-portal-frontend2-config

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: bidw-portal-frontend2
  namespace: ${namespace}
spec:
  selector:
    app: bidw-portal-frontend2
  ports:
  - port: 80
    targetPort: ${export_port}
    protocol: TCP
  type: LoadBalancer